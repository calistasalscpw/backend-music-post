name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Set up Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Project Dependencies
        run: npm ci

      - name: Archive Project into a Zip File
        run: |
          zip -r app.zip . -x ".git/*" "node_modules/*" ".github/*" ".env"

      - name: Copy Deployment Package to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "./app.zip"
          target: "/home/${{ secrets.EC2_USER }}"

      - name: Deploy Application on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e

            PROJECT_DIR="/home/${{ secrets.EC2_USER }}/music-discovery-backend"
            ZIP_PATH="/home/${{ secrets.EC2_USER }}/app.zip"

            mkdir -p $PROJECT_DIR
            sudo chown -R ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} $PROJECT_DIR

            cd $PROJECT_DIR

            unzip -o "$ZIP_PATH"
            rm "$ZIP_PATH"

            cat << 'EOF' > .env
            JWT_SECRET_KEY='${{ secrets.JWT_SECRET_KEY }}'
            GOOGLE_APP_PASSWORD='${{ secrets.GOOGLE_APP_PASSWORD }}'
            GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}'
            GOOGLE_SECRET='${{ secrets.GOOGLE_SECRET }}'
            AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}'
            AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}'
            AWS_BUCKET_NAME='${{ secrets.AWS_BUCKET_NAME }}'
            AWS_REGION='${{ secrets.AWS_REGION }}'
            EOF

            npm install --production
            sudo npm install -g pm2
            pm2 startOrRestart server.js --name music-discovery-backend || pm2 start server.js --name music-discovery-backend
